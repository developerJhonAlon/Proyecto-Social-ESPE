/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.espe_innovativa.ws;

import static java.io.File.separatorChar;
import java.net.URLDecoder;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Date;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.FileDataSource;
import javax.annotation.Resource;
import javax.jws.WebService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.naming.InitialContext;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.ws.rs.core.Context;
import javax.xml.ws.WebServiceContext;
import javax.xml.ws.handler.MessageContext;

/**
 *
 * @author PC1
 */
@WebService(serviceName = "WSEnvioMail")
public class WSEnvioMail {

    /**
     * This is a sample web service operation
     */
    @Resource
    private WebServiceContext context;

    @WebMethod(operationName = "hello")
    public String hello(@WebParam(name = "name") String txt) {
        return "Hello " + txt + " !";
    }

    @WebMethod(operationName = "enviarMail")
    public void enviarMail(@WebParam(name = "remitente") String remitente,
            @WebParam(name = "destinatarios") String destinatarios,
            @WebParam(name = "asunto") String asunto,
            @WebParam(name = "mensaje") String mensaje,
            @WebParam(name = "esHtml") Boolean esHtml,
            @WebParam(name = "archivoAdjunto") byte[] archivoAdjunto,
            @WebParam(name = "nombreArchivoAdjunto") String nombreArchivoAdjunto,
            @WebParam(name = "archivoAdjunto2") byte[] archivoAdjunto2,
            @WebParam(name = "nombreArchivoAdjunto2") String nombreArchivoAdjunto2) {

        /*
        
        //CON SERVIDOR MAIL DE ESPE
        try {
         BodyPart messageBodyPart = new MimeBodyPart();
         if (esHtml) {
         messageBodyPart.setContent(mensaje, "text/html; charset=UTF-8");
         } else {
         messageBodyPart.setText(mensaje);
         }

         MimeMultipart multiParte = new MimeMultipart();
         multiParte.addBodyPart(messageBodyPart);

         InitialContext ic = new InitialContext();
         Session session = (Session) ic.lookup("mail/MySession");
         Message msg = new MimeMessage(session);
         msg.setSubject(asunto);
         msg.setSentDate(new Date());
         msg.setFrom(new InternetAddress(remitente));
         msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(destinatarios));
         msg.setContent(multiParte);
         Transport.send(msg);

         } catch (Exception e) {
         e.printStackTrace();
         }
         */
        //CON SERVIDOR GMAIL
        try {
            BodyPart messageBodyPart = new MimeBodyPart();
            if (esHtml) {
                messageBodyPart.setContent(mensaje, "text/html; charset=UTF-8");
            } else {
                messageBodyPart.setText(mensaje);
            }

            MimeMultipart multiParte = new MimeMultipart();
            multiParte.addBodyPart(messageBodyPart);
            if (archivoAdjunto != null && nombreArchivoAdjunto != null && !nombreArchivoAdjunto.trim().isEmpty()) {
                BodyPart adjunto = new MimeBodyPart();
                ServletContext servletContext = (ServletContext) context.getMessageContext().get(MessageContext.SERVLET_CONTEXT);
                String path = servletContext.getRealPath("") + separatorChar + "temp";
                if (!Files.isDirectory(Paths.get(path))) {
                    Files.createDirectories(Paths.get(path));
                }
                path = path + separatorChar + new Date().getTime();
                Files.write(Paths.get(path), archivoAdjunto, StandardOpenOption.CREATE);
                adjunto.setDataHandler(new DataHandler(new FileDataSource(path)));
                adjunto.setFileName(nombreArchivoAdjunto);
                multiParte.addBodyPart(adjunto);
            }
            if (archivoAdjunto2 != null && nombreArchivoAdjunto2 != null && !nombreArchivoAdjunto2.trim().isEmpty()) {
                BodyPart adjunto = new MimeBodyPart();
                ServletContext servletContext = (ServletContext) context.getMessageContext().get(MessageContext.SERVLET_CONTEXT);
                String path = servletContext.getRealPath("") + separatorChar + "temp";
                if (!Files.isDirectory(Paths.get(path))) {
                    Files.createDirectories(Paths.get(path));
                }
                path = path + separatorChar + new Date().getTime();
                Files.write(Paths.get(path), archivoAdjunto2, StandardOpenOption.CREATE);
                adjunto.setDataHandler(new DataHandler(new FileDataSource(path)));
                adjunto.setFileName(nombreArchivoAdjunto2);
                multiParte.addBodyPart(adjunto);
            }
            InitialContext ic = new InitialContext();
            Session session = (Session) ic.lookup("mail/MySession");
            Properties props = session.getProperties();
            props.put("mail.from", remitente);
            props.put("mail.smtp.user", "espevinculacion01@gmail.com");
            props.put("mail.smtp.password", "espevinculacion2016");
            Message msg = new MimeMessage(session);
            msg.setSubject(asunto);
            msg.setSentDate(new Date());
            msg.setFrom(new InternetAddress(remitente));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(destinatarios));
            msg.setContent(multiParte);
            Transport.send(msg);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
